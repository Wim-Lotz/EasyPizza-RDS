// <auto-generated />
using System;
using EasyPizza.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EasyPizza.Infrastructure.Migrations
{
    [DbContext(typeof(EasyPizzaDbContext))]
    [Migration("20241021120728_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EasyPizza.Domain.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15f843f9-bfc0-4bd9-940c-2ec7913865e3"),
                            Deleted = false,
                            Name = "cheese",
                            Price = 1.25m
                        },
                        new
                        {
                            Id = new Guid("46b1bd83-2380-4502-aa7e-b2b39627ed92"),
                            Deleted = false,
                            Name = "salami",
                            Price = 2.0m
                        },
                        new
                        {
                            Id = new Guid("ca9ef119-9023-4b48-b373-35898649df14"),
                            Deleted = false,
                            Name = "green pepper",
                            Price = 0.25m
                        });
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PizzaBaseId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PizzaBasePrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PizzaBaseId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PizzaBaseSize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PizzaBaseType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("PizzaBases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3316034d-4de4-48cc-9233-3bf598d72312"),
                            Deleted = false,
                            PizzaBaseSize = "Small",
                            PizzaBaseType = "GlutenFree",
                            Price = 1.0m
                        },
                        new
                        {
                            Id = new Guid("c51ca639-400f-488f-a80b-eaba1bd1184c"),
                            Deleted = false,
                            PizzaBaseSize = "Medium",
                            PizzaBaseType = "GlutenFree",
                            Price = 1.2m
                        },
                        new
                        {
                            Id = new Guid("76524320-6da8-4587-af72-536c22114b04"),
                            Deleted = false,
                            PizzaBaseSize = "Large",
                            PizzaBaseType = "GlutenFree",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = new Guid("37c8f9e3-e8bb-4784-a2f0-87d67e33741b"),
                            Deleted = false,
                            PizzaBaseSize = "Small",
                            PizzaBaseType = "Thin",
                            Price = 1.0m
                        },
                        new
                        {
                            Id = new Guid("550d30a5-2c15-4d65-a67b-bc0e65e0002b"),
                            Deleted = false,
                            PizzaBaseSize = "Medium",
                            PizzaBaseType = "Thin",
                            Price = 1.2m
                        },
                        new
                        {
                            Id = new Guid("1fd65f37-4ac3-4dde-b4ee-49d8982a2c1f"),
                            Deleted = false,
                            PizzaBaseSize = "Large",
                            PizzaBaseType = "Thin",
                            Price = 1.5m
                        });
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("IngredientPrice")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaIngredients");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.OrderLine", b =>
                {
                    b.HasOne("EasyPizza.Domain.Entities.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyPizza.Domain.Entities.Pizza", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Pizza", b =>
                {
                    b.HasOne("EasyPizza.Domain.Entities.PizzaBase", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("PizzaBaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaIngredient", b =>
                {
                    b.HasOne("EasyPizza.Domain.Entities.Ingredient", null)
                        .WithMany("PizzaIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyPizza.Domain.Entities.Pizza", null)
                        .WithMany("PizzaIngredients")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("PizzaIngredients");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Pizza", b =>
                {
                    b.Navigation("OrderLines");

                    b.Navigation("PizzaIngredients");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaBase", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}

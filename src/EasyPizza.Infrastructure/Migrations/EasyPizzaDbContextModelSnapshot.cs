// <auto-generated />
using System;
using EasyPizza.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EasyPizza.Infrastructure.Migrations
{
    [DbContext(typeof(EasyPizzaDbContext))]
    partial class EasyPizzaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EasyPizza.Domain.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16af5c15-3814-4590-a385-897ad7919556"),
                            Deleted = false,
                            Name = "cheese",
                            Price = 1.25m
                        },
                        new
                        {
                            Id = new Guid("76ad2763-e715-4125-8087-03be7eb00552"),
                            Deleted = false,
                            Name = "salami",
                            Price = 2.0m
                        },
                        new
                        {
                            Id = new Guid("b3165107-8c02-44ea-86f2-3c31bbe2be5d"),
                            Deleted = false,
                            Name = "green pepper",
                            Price = 0.25m
                        });
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId")
                        .IsUnique();

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PizzaBaseId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PizzaBasePrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PizzaBaseId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("PizzaBaseSize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("PizzaBases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e03ccc73-8aa5-4c6a-8783-9466e1362235"),
                            Deleted = false,
                            Name = "gluten free",
                            PizzaBaseSize = "Small",
                            Price = 1.0m
                        },
                        new
                        {
                            Id = new Guid("325f0ea3-ce42-4aec-b0a2-a5d3a43905dc"),
                            Deleted = false,
                            Name = "gluten free",
                            PizzaBaseSize = "Medium",
                            Price = 1.2m
                        },
                        new
                        {
                            Id = new Guid("e0d62c31-de37-4e82-a898-baca4980b593"),
                            Deleted = false,
                            Name = "gluten free",
                            PizzaBaseSize = "Large",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = new Guid("0434c226-a2d5-4d2b-9d62-e969a7c62c08"),
                            Deleted = false,
                            Name = "thin crust",
                            PizzaBaseSize = "Small",
                            Price = 1.0m
                        },
                        new
                        {
                            Id = new Guid("4fb86e90-3690-4060-b2dc-dcd0ae7d0ffd"),
                            Deleted = false,
                            Name = "thin crust",
                            PizzaBaseSize = "Medium",
                            Price = 1.2m
                        },
                        new
                        {
                            Id = new Guid("83f1f205-4c01-4341-92fd-d5e17cf8a1ae"),
                            Deleted = false,
                            Name = "thin crust",
                            PizzaBaseSize = "Large",
                            Price = 1.5m
                        });
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("IngredientPrice")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaIngredients");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.OrderLine", b =>
                {
                    b.HasOne("EasyPizza.Domain.Entities.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EasyPizza.Domain.Entities.Pizza", "Pizza")
                        .WithOne("OrderLine")
                        .HasForeignKey("EasyPizza.Domain.Entities.OrderLine", "PizzaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Pizza", b =>
                {
                    b.HasOne("EasyPizza.Domain.Entities.PizzaBase", "PizzaBase")
                        .WithMany("Pizzas")
                        .HasForeignKey("PizzaBaseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PizzaBase");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaIngredient", b =>
                {
                    b.HasOne("EasyPizza.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("PizzaIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EasyPizza.Domain.Entities.Pizza", "Pizza")
                        .WithMany("PizzaIngredients")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("PizzaIngredients");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.Pizza", b =>
                {
                    b.Navigation("OrderLine")
                        .IsRequired();

                    b.Navigation("PizzaIngredients");
                });

            modelBuilder.Entity("EasyPizza.Domain.Entities.PizzaBase", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
